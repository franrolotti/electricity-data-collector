services:
  airflow-db:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5

  airflow:
    image: apache/airflow:2.9.2
    depends_on:
      - airflow-db
    env_file: .env
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "please_generate_one"
      AIRFLOW__WEBSERVER__RBAC: "true"
      ENTSOE_API_TOKEN: ${ENTSOE_API_TOKEN}
      EDC_TIMEZONE: ${EDC_TIMEZONE}
      EDC_OUTPUT_DIR: ${EDC_OUTPUT_DIR}
      EDC_BIDDING_ZONES: ${EDC_BIDDING_ZONES}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/requirements.txt:/requirements.txt
      - ./data:/opt/airflow/data
      - ./edc:/opt/airflow/edc
    command: >
      bash -c "
      pip install -r /requirements.txt -e /opt/airflow/edc &&
      airflow db migrate &&
      airflow users create --role Admin --username ${_AIRFLOW_WWW_USER_USERNAME} --password ${_AIRFLOW_WWW_USER_PASSWORD} --firstname A --lastname D --email you@example.com &&
      airflow webserver & sleep 5 && airflow scheduler
      "
    ports:
      - "8080:8080"

volumes:
  pgdata:
